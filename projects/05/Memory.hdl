// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:

    // Only access regular memory if load is true AND the address is 
    // less than 16K, in other words, the MSB of address is 0
    Not (in=address[14], out=memory);
    And (a=load, b=memory, out=loadMemory);
    RAM16K (in=in, load=loadMemory, address=address[0..13], out=memOut);

    // Only access screen memory if load is true AND the address is 
    // greater than 16K, but less than the keyboard address
    Not (in=address[13], out=notAddress13);
    And (a=address[14], b=notAddress13, out=screen);
    Screen (in=in, load=screen, address=address[0..12], out=screenOut);
    
    // Keyboard ALWAYS outputs whatever is in its memory
    Keyboard (out=keyboardOut);

    // Choose which output to send out based on the address.
    Mux4Way16 (a=memOut, 
               b=memOut, 
               c=screenOut, 
               d=keyboardOut,
               sel[0]=address[13],
               sel[1]=address[14],
               out=out);
}