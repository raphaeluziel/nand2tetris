// By Raphael Uziel
// File name: projects/09/FlappyBird/Bird.jack

/** Implements a graphical bird. */
class Bird {

    field int x, y;         // Bird's y position
    field int delay;        // Slow down bird
    field int counter;      // Slow down fall of bird
    field boolean gravity;

    /** Constructs a new Bird with a given location. */
    constructor Bird new(boolean grav) {
        let x = 128;     // x = 511 is all the way to the right
        let y = 128;     // y = 255 is all the way down
        let counter = 0;
        let delay = 0;
        let gravity = grav;
        do draw();
        return this;
    }

    method int getbirdx() { return x; }
    method int getbirdy() { return y; }

    /** Disposes this bird */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void draw() {
        var int memAddress;
        let memAddress = 16384+(x/16)+(32*y);
        do Memory.poke(memAddress+0, 0);
        do Memory.poke(memAddress+32, 16);
        do Memory.poke(memAddress+64, 48);
        do Memory.poke(memAddress+96, 7248);
        do Memory.poke(memAddress+128, 14033);
        do Memory.poke(memAddress+160, -6729);
        do Memory.poke(memAddress+192, 15423);
        do Memory.poke(memAddress+224, 7231);
        do Memory.poke(memAddress+256, 767);
        do Memory.poke(memAddress+288, 705);
        do Memory.poke(memAddress+320, 1216);
        do Memory.poke(memAddress+352, 2432);
        do Memory.poke(memAddress+384, 3584);
        do Memory.poke(memAddress+416, 1024);
        do Memory.poke(memAddress+448, 0);
        do Memory.poke(memAddress+480, 0);

        return;
    }

    method void erase() {
        var int memAddress, i;
        let memAddress = 16384+(x/16)+(32*y);
        let i = 0;
        while (i < 14) {
            do Memory.poke(memAddress+(32*i), 0);
            let i = i + 1;
        }
        return;
    }

   /** Moves the bird up by 1 pixels. */
    method void moveUp() {
        let delay = delay + 1;
        if ((y > 11) & (delay > 10)) {
            do erase();
            let y = y - 1;
            if (gravity) { let y = y - 1; }
            do draw();
            let delay = 0;
        }
      return;
    }

    /** Moves the bird down by 1 pixels. */
    method void moveDown() {
        let delay = delay + 1;
        if ((y < 232) & (delay > 10)) {
            do erase();
            let y = y + 1;
            do draw();
            let delay = 0;
        }
        return;
    }


    /** Moves the bird down by 1 pixels. */
    method void drop(int ms) {
        let counter = counter + 1;
        do erase();
        if ((y < 232) & (counter > 16)) {
            let y = y + 1;
            let counter = 0;
        }
        do draw();
        return;
    }

}
